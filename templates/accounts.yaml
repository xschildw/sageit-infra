Description: Setup IAM policies, groups and accounts
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  InitNewUserPassword:
    Type: String
    NoEcho: true
Resources:
  # !! IMPORTANT !! - AWS API will refuse to remove users that have attached resources.
  # Therefore you must do the following before deleting them from this file:
  # 1. Detach or remove the following user resources: login profile, attached
  #    MFA device, access-keys, ssh-keys, and policies.
  # 2. Detach the user from all groups.
  AWSIAMXavierSchildwachterUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: x.schildwachter@sagebase.org
      Groups:
        - !Ref AWSIAMAllUsersGroup
        - !Ref AWSIAMDeveloperUsersGroup
        - !Ref AWSIAMBillingManagersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true
  AWSIAMKhaiDoUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: khai.do@sagebase.org
      Groups:
        - !Ref AWSIAMAllUsersGroup
        - !Ref AWSIAMDeveloperUsersGroup
        - !Ref AWSIAMBillingManagersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true
  AWSIAMMichaelLeeUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: michael.lee@sagebase.org
      Groups:
        - !Ref AWSIAMAllUsersGroup
        - !Ref AWSIAMAmpadPortalUpdaterGroup
        - !Ref AWSIAMNfPortalUpdaterGroup
        - !Ref AWSIAMCsbcPsonPortalUpdaterGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true
  AWSIAMDeveloperUsersGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - !Ref AWSIAMDynamoDenyDeletePolicy
        - !Ref AWSIAMRdsDenyDeletePolicy
  AWSIAMAdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS:
                - !GetAtt AWSIAMXavierSchildwachterUser.Arn
                - !GetAtt AWSIAMKhaiDoUser.Arn
            Action:
              - "sts:AssumeRole"
      Path: "/"
  AWSIAMDynamoDenyDeletePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Deny
            Action:
              # UpdateTable operation retricts deletion of indexes
              - dynamodb:UpdateTable
              - dynamodb:DeleteTable
            Resource: "*"
  AWSIAMRdsDenyDeletePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Deny
            Action:
              - rds:DeleteDBCluster
              - rds:DeleteDBClusterSnapshot
              - rds:DeleteDBInstance
              - rds:DeleteDBSnapshot
            Resource: "*"
  AWSIAMOrganizationsFullAccessPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: "Allow"
            Action: "organizations:*"
            Resource: "*"
  AWSIAMAdminRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "admin"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles:
        -
          !Ref AWSIAMAdminRole
  AWSIAMAllUsersGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref AWSIAMEnforceMfaPolicy
  AWSIAMBillingManagersGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/Billing
        - !Ref AWSIAMOrganizationsFullAccessPolicy
  # Policies to update static portals
  AWSIAMAmpadPortalUpdatePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::ampadportal.org
          - arn:aws:s3:::staging.ampadportal.org
          - arn:aws:s3:::static.ampadportal.org
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObject
          - s3:PutObjectAcl
          Resource:
          - arn:aws:s3:::ampadportal.org/*
          - arn:aws:s3:::staging.ampadportal.org/*
          - arn:aws:s3:::static.ampadportal.org/*
  AWSIAMAmpadPortalUpdaterGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - !Ref AWSIAMAmpadPortalUpdatePolicy
  AWSIAMNfPortalUpdatePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::prod.nf.synapse.org
          - arn:aws:s3:::staging.nf.synapse.org
          - arn:aws:s3:::static.nf.synapse.org
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObject
          - s3:PutObjectAcl
          Resource:
          - arn:aws:s3:::prod.nf.synapse.org/*
          - arn:aws:s3:::staging.nf.synapse.org/*
          - arn:aws:s3:::static.nf.synapse.org/*
  AWSIAMNfPortalUpdaterGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - !Ref AWSIAMNfPortalUpdatePolicy
  AWSIAMCsbcPsonPortalUpdatePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::prod.csbc-pson.synapse.org
          - arn:aws:s3:::staging.csbc-pson.synapse.org
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObject
          - s3:PutObjectAcl
          Resource:
          - arn:aws:s3:::prod.csbc-pson.synapse.org/*
          - arn:aws:s3:::staging.csbc-pson.synapse.org/*
  AWSIAMCsbcPsonPortalUpdaterGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - !Ref AWSIAMCsbcPsonPortalUpdatePolicy
  # EC2 instance role to deploy portals
  AWSIAMPortalDeployerPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: "portaldeployer"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::ampadportal.org
          - arn:aws:s3:::staging.ampadportal.org
          - arn:aws:s3:::static.ampadportal.org
          - arn:aws:s3:::prod.nf.synapse.org
          - arn:aws:s3:::staging.nf.synapse.org
          - arn:aws:s3:::static.nf.synapse.org
          - arn:aws:s3:::prod.csbc-pson.synapse.org
          - arn:aws:s3:::staging.csbc-pson.synapse.org
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObject
          - s3:PutObjectAcl
          Resource:
          - arn:aws:s3:::ampadportal.org/*
          - arn:aws:s3:::staging.ampadportal.org/*
          - arn:aws:s3:::static.ampadportal.org/*
          - arn:aws:s3:::prod.nf.synapse.org/*
          - arn:aws:s3:::staging.nf.synapse.org/*
          - arn:aws:s3:::static.nf.synapse.org/*
          - arn:aws:s3:::prod.csbc-pson.synapse.org/*
          - arn:aws:s3:::staging.csbc-pson.synapse.org/*
        - Effect: Allow
          Action:
          - cloudfront:CreateInvalidation
          Resource:
          - Join
              - ''
              - - 'arn:aws:cloudfront::'
                - !Ref 'AWS:AccountId'
                - ':distribution/'
                - !ImportValue us-east-1-staging-csbc-pson-s3webcf-CloudfrontId
          - Join
              - ''
              - - 'arn:aws:cloudfront::'
                - !Ref 'AWS:AccountId'
                - ':distribution/'
                - !ImportValue us-east-1-prod-csbc-pson-s3webcf-CloudfrontId
      Roles:
        - !Ref AWSIAMPortalDeployerRole
  AWSIAMPortalDeployerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: 'ec2.amazonaws.com'
            Action:
              - "sts:AssumeRole"
      Path: "/"
  AWSIAMPortalDeployerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties: 
      Path: "/"
      Roles:
        - !Ref AWSIAMPortalDeployerRole
  # policy to enforce MFA
  AWSIAMEnforceMfaPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAllUsersToListAccounts
            Effect: Allow
            Action:
              - 'iam:ListAccountAliases'
              - 'iam:ListUsers'
              - 'iam:GetAccountSummary'
            Resource: '*'
          - Sid: AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation
            Effect: Allow
            Action:
              - 'iam:ChangePassword'
              - 'iam:CreateAccessKey'
              - 'iam:CreateLoginProfile'
              - 'iam:DeleteAccessKey'
              - 'iam:DeleteLoginProfile'
              - 'iam:GetAccountPasswordPolicy'
              - 'iam:GetLoginProfile'
              - 'iam:ListAccessKeys'
              - 'iam:UpdateAccessKey'
              - 'iam:UpdateLoginProfile'
              - 'iam:ListSigningCertificates'
              - 'iam:DeleteSigningCertificate'
              - 'iam:UpdateSigningCertificate'
              - 'iam:UploadSigningCertificate'
              - 'iam:ListSSHPublicKeys'
              - 'iam:GetSSHPublicKey'
              - 'iam:DeleteSSHPublicKey'
              - 'iam:UpdateSSHPublicKey'
              - 'iam:UploadSSHPublicKey'
            Resource: !Join
              - ''
              - - 'arn:aws:iam::'
                - !Ref AWS::AccountId
                - ':user/${aws:username}'
          - Sid: AllowIndividualUserToListOnlyTheirOwnMFA
            Effect: Allow
            Action:
              - 'iam:ListVirtualMFADevices'
              - 'iam:ListMFADevices'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/*'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
          - Sid: AllowIndividualUserToManageTheirOwnMFA
            Effect: Allow
            Action:
              - 'iam:CreateVirtualMFADevice'
              - 'iam:DeleteVirtualMFADevice'
              - 'iam:RequestSmsMfaRegistration'
              - 'iam:FinalizeSmsMfaRegistration'
              - 'iam:EnableMFADevice'
              - 'iam:ResyncMFADevice'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/${aws:username}'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
          - Sid: AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA
            Effect: Allow
            Action:
              - 'iam:DeactivateMFADevice'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/${aws:username}'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
            Condition:
              Bool:
                'aws:MultiFactorAuthPresent': 'true'
          - Sid: BlockAnyAccessOtherThanAboveUnlessSignedInWithMFA
            Effect: Deny
            NotAction: 'iam:*'
            Resource: '*'
            Condition:
              BoolIfExists:
                'aws:MultiFactorAuthPresent': 'false'
Outputs:
  AWSIAMEnforceMfaPolicy:
    Value: !Ref AWSIAMEnforceMfaPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-EnforceMfaPolicy'
